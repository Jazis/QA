from pages.base_page import BasePage
from widgets.button import Button
from widgets.input import Input


class TransPage(BasePage):
    def __init__(self) -> None:
        super().__init__()
        self.btn_export = Button(selector=self._locators.trans.btn_export)
        self.filter_trans = Input(selector=self._locators.trans.filter_trans)
        self.btn_status_ru = Button(selector=self._locators.trans.btn_status_ru)
        self.btn_user_ru = Button(selector=self._locators.trans.btn_user_ru)
        self.btn_card_ru = Button(selector=self._locators.trans.btn_card_ru)
        self.btn_date_and_time_ru = Button(selector=self._locators.trans.btn_date_and_time_ru)
        self.all_spend_sum = Button(selector=self._locators.trans.all_spend_sum)
        self.btn_next_page = Button(selector=self._locators.trans.btn_next_page)
        self.first_row = Button(selector=self._locators.trans.first_row)
        self.five_row = Button(selector=self._locators.trans.five_row)
        self.eight_row = Button(selector=self._locators.trans.eight_row)
        self.seventeen_row = Button(selector=self._locators.trans.seventeen_row)
        self.twenty_two_row = Button(selector=self._locators.trans.twenty_two_row)
        self.settled_card_transaction = Button(selector=self._locators.trans.settled_card_transaction)
        self.refund_card_transaction = Button(selector=self._locators.trans.refund_card_transaction)
        self.pending_card_transaction = Button(selector=self._locators.trans.pending_card_transaction)
        self.sum_trans_on_card_pending = Button(selector=self._locators.trans.sum_trans_on_card_pending)
        self.number_card_on_card = Button(selector=self._locators.trans.number_card_on_card)
        self.ads_trans_on_card = Button(selector=self._locators.trans.ads_trans_on_card)
        self.btn_close_card = Button(selector=self._locators.trans.btn_close_card)
        self.twelve_row = Button(selector=self._locators.trans.twelve_row)
        self.sum_trans_on_card_settled = Button(selector=self._locators.trans.sum_trans_on_card_settled)
        self.sixteen_row = Button(selector=self._locators.trans.sixteen_row)
        self.twenty_one_row = Button(selector=self._locators.trans.twenty_one_row)
        self.filter_status = Button(selector=self._locators.cards.status_card_ru)
        self.filter_settled = Button(selector=self._locators.trans.filter_settled)
        self.filter_refund = Button(selector=self._locators.trans.filter_refund)
        self.filter_pending = Button(selector=self._locators.trans.filter_pending)
        self.filter_reversed = Button(selector=self._locators.trans.filter_reversed)
        self.filter_declined = Button(selector=self._locators.trans.filter_declined)
        self.selected_filters = Button(selector=self._locators.trans.selected_filters)
        self.calendar_button = Button(selector=self._locators.cards.calendar_button)
        self.calendar_all_time = Button(selector=self._locators.cards.calendar_all_time)
        self.calendar_button_apply_ru = Button(selector=self._locators.cards.calendar_button_apply_ru)
        self.filter_user = Button(selector=self._locators.cards.user_card_filter)
        self.filter_by_card_ru = Button(selector=self._locators.trans.filter_by_card_ru)
        self.reversed_card_transaction = Button(selector=self._locators.trans.reversed_card_transaction)
        self.declined_card_transaction = Button(selector=self._locators.trans.declined_card_transaction)
        self.id_trans = Button(selector=self._locators.trans.id_trans)
        self.popper_activator = Button(selector=self._locators.trans.popper_activator)
        self.description_modal_trans = Button(selector=self._locators.trans.description_modal_trans)
        self.country_modal_trans = Button(selector=self._locators.trans.country_modal_trans)
        self.currency_modal_trans = Button(selector=self._locators.trans.currency_modal_trans)
        self.mcc_modal_trans = Button(selector=self._locators.trans.mcc_modal_trans)
        self.transaction_id_modal_trans = Button(selector=self._locators.trans.transaction_id_modal_trans)
        self.input_at_filter = Input(selector=self._locators.trans.input_at_filter)
        self.checkbox_filter_first = Button(selector=self._locators.trans.checkbox_filter_first)
        self.checkbox_filter_second = Button(selector=self._locators.trans.checkbox_filter_second)
        self.sum_trans_first_row = Button(selector=self._locators.trans.sum_trans_first_row)
        self.sum_with_fee_decline_first_row = Button(selector=self._locators.trans.sum_with_fee_decline_first_row)
        self.sum_decline_first_row = Button(selector=self._locators.trans.sum_decline_first_row)
        self.sum_trans_first_row_spend_trans = Button(selector=self._locators.trans.sum_trans_first_row_spend_trans)
        self.first_refund_in_table = Button(selector=self._locators.trans.first_refund_in_table)
        self.first_settled_in_table = Button(selector=self._locators.trans.first_settled_in_table)
        self.widget_sum_trans = Button(selector=self._locators.trans.widget_sum_trans)
        self.widget_sum_trans_graph = Button(selector=self._locators.trans.widget_sum_trans_graph)
        self.widget_sum_spend = Button(selector=self._locators.trans.widget_sum_spend)
        self.widget_sum_spend_graph = Button(selector=self._locators.trans.widget_sum_spend_graph)
        self.widget_count_trans_declined = Button(selector=self._locators.trans.widget_count_trans_declined)
        self.widget_count_trans_declined_graph = Button(selector=self._locators.trans.widget_count_trans_declined_graph)
        self.widget_sum_trans_declined = Button(selector=self._locators.trans.widget_sum_trans_declined)
        self.widget_sum_trans_declined_graph = Button(selector=self._locators.trans.widget_sum_trans_declined_graph)
        self.widget_trans_decline_rate = Button(selector=self._locators.trans.widget_trans_decline_rate)
        self.widget_trans_decline_rate_graph = Button(selector=self._locators.trans.widget_trans_decline_rate_graph)
        self.widget_title_decline_rate = Button(selector=self._locators.trans.widget_title_decline_rate)



