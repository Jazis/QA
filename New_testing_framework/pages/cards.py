from pages.base_page import BasePage
from widgets.button import Button
from widgets.input import Input


class CardPage(BasePage):
    def __init__(self) -> None:
        super().__init__()

        self.title_my_cards_ru = Button(selector=self._locators.cards.title_my_cards_ru)
        self.title_all_cards_ru = Button(selector=self._locators.cards.title_all_cards_ru)
        self.filter_name_card = Input(selector=self._locators.cards.filter_name_card)
        self.status_card_ru = Button(selector=self._locators.cards.status_card_ru)
        self.bin_card_filter = Button(selector=self._locators.cards.bin_card_filter)
        self.user_card_filter = Button(selector=self._locators.cards.user_card_filter)
        self.calendar_button = Button(selector=self._locators.cards.calendar_button)
        self.create_card_ru = Button(selector=self._locators.cards.create_card_ru)
        self.title_table_card_ru = Button(selector=self._locators.cards.title_table_card_ru)
        self.title_table_limit_ru = Button(selector=self._locators.cards.title_table_limit_ru)
        self.title_table_status_ru = Button(selector=self._locators.cards.title_table_status_ru)
        self.title_table_bin_ru = Button(selector=self._locators.cards.title_table_bin_ru)
        self.title_table_user_ru = Button(selector=self._locators.cards.title_table_user_ru)
        self.title_table_money_ru = Button(selector=self._locators.cards.title_table_money_ru)
        self.btn_create_card_uk = Button(selector=self._locators.cards.btn_create_card_uk)
        self.name_create_card_ru = Input(selector=self._locators.cards.name_create_card_ru)
        self.bin_default_create_card_ru = Button(selector=self._locators.cards.bin_default_create_card_ru)
        self.no_limit_card_limit = Button(selector=self._locators.cards.no_limit_card_limit)
        self.card_limit_disabled = Button(selector=self._locators.cards.card_limit_disabled)
        self.button_create_ru = Button(selector=self._locators.cards.button_create_ru)
        self.button_create_uk = Button(selector=self._locators.cards.button_create_uk)
        self.modal_created_card_name_ru = Button(selector=self._locators.cards.modal_created_card_name_ru)
        self.modal_created_card_active_ru = Button(selector=self._locators.cards.modal_created_card_active_ru)
        self.modal_created_card_active_uk = Button(selector=self._locators.cards.modal_created_card_active_uk)
        self.card_bin_second = Button(selector=self._locators.cards.card_bin_second)
        self.card_bin = Button(selector=self._locators.cards.card_bin)
        self.limit_card = Button(selector=self._locators.cards.limit_card)
        self.modal_card_no_limit_ru = Button(selector=self._locators.cards.modal_card_no_limit_ru)
        self.modal_card_month_limit_ru = Button(selector=self._locators.cards.modal_card_month_limit_ru)
        self.modal_card_lifetime_limit_ru = Button(selector=self._locators.cards.modal_card_lifetime_limit_ru)
        self.modal_card_day_limit_ru = Button(selector=self._locators.cards.modal_card_day_limit_ru)
        self.modal_card_week_limit_ru = Button(selector=self._locators.cards.modal_card_week_limit_ru)
        self.modal_card_limit_amount_ru = Button(selector=self._locators.cards.modal_card_limit_amount_ru)
        self.input_limit_amount = Input(selector=self._locators.cards.input_limit_amount)
        self.title_cash_after_login = Button(selector=self._locators.obdord.title_cash_after_login)
        self.modal_created_card_real_name_ru = Button(selector=self._locators.cards.modal_created_card_real_name_ru)
        self.billing_address_title = Button(selector=self._locators.cards.billing_address_title)
        self.billing_address = Button(selector=self._locators.cards.billing_address)
        self.arrow_next_page_button = Button(selector=self._locators.cards.arrow_next_page_button)
        self.hidden_card_data = Button(selector=self._locators.cards.hidden_card_data)
        self.not_hidden_card_data = Button(selector=self._locators.cards.not_hidden_card_data)
        self.toast_copy_number = Button(selector=self._locators.cards.toast_copy_number)
        self.toast_close_button = Button(selector=self._locators.cards.toast_close_button)
        self.button_more_ru = Button(selector=self._locators.cards.button_more_ru)
        self.button_more_uk = Button(selector=self._locators.cards.button_more_uk)
        self.modal_card_no_limit_uk = Button(selector=self._locators.cards.modal_card_no_limit_uk)
        self.button_change_name_ru = Button(selector=self._locators.cards.button_change_name_ru)
        self.button_save_ru = Button(selector=self._locators.cards.button_save_ru)
        self.change_card_limit_ru = Button(selector=self._locators.cards.change_card_limit_ru)
        self.modal_choose_limit = Button(selector=self._locators.cards.modal_choose_limit)
        self.modal_save_limit_ru = Button(selector=self._locators.cards.modal_save_limit_ru)
        self.modal_save_limit_uk = Button(selector=self._locators.cards.modal_save_limit_uk)
        self.close_card_button_ru = Button(selector=self._locators.cards.close_card_button_ru)
        self.title_close_card_ru = Button(selector=self._locators.cards.title_close_card_ru)
        self.logo_card_modal_close_card = Button(selector=self._locators.cards.logo_card_modal_close_card)
        self.modal_button_close_card_ru = Button(selector=self._locators.cards.modal_button_close_card_ru)
        self.title_of_closed_card = Button(selector=self._locators.cards.title_of_closed_card)
        self.button_freeze_card = Button(selector=self._locators.cards.button_freeze_card)
        self.button_unfreeze_card = Button(selector=self._locators.cards.button_unfreeze_card)
        self.button_go_to_transactions = Button(selector=self._locators.cards.button_go_to_transactions)
        self.number_of_card = Button(selector=self._locators.cards.number_of_card)
        self.amount_spend = Button(selector=self._locators.cards.amount_spend)
        self.card_freeze_user_data = Button(selector=self._locators.cards.card_freeze_user_data)
        self.card_closed_user_data = Button(selector=self._locators.cards.card_closed_user_data)
        self.date_filter_in_title_table = Button(selector=self._locators.cards.date_filter_in_title_table)
        self.sum_in_title_table = Button(selector=self._locators.cards.sum_in_title_table)
        self.first_card_after_search = Button(selector=self._locators.cards.first_card_after_search)
        self.spinner = Button(selector=self._locators.cards.spinner)
        self.cards_not_found = Button(selector=self._locators.cards.cards_not_found)
        self.calendar_all_time = Button(selector=self._locators.cards.calendar_all_time)
        self.modal_change_card = Button(selector=self._locators.cards.modal_change_card)
        self.second_card_employee = Button(selector=self._locators.cards.second_card_employee)
        self.modal_button_close_card_uk = Button(selector=self._locators.cards.modal_button_close_card_uk)
        self.modal_confirm_close_card_uk = Button(selector=self._locators.cards.modal_confirm_close_card_uk)
        self.title_of_closed_card_uk = Button(selector=self._locators.cards.title_of_closed_card_uk)
        self.title_table_spend_ru = Button(selector=self._locators.cards.title_table_spend_ru)
        self.filter_closed_card_ru = Button(selector=self._locators.cards.filter_closed_card_ru)
        self.filter_bin_553437 = Button(selector=self._locators.cards.filter_bin_553437)
        self.tag_closed_ru = Button(selector=self._locators.cards.tag_closed_ru)
        self.tag_bin_553437 = Button(selector=self._locators.cards.tag_bin_553437)
        self.button_clear_filters_ru = Button(selector=self._locators.cards.button_clear_filters_ru)
        self.modal_closed_number_card = Button(selector=self._locators.cards.modal_closed_number_card)
        self.status_closed = Button(selector=self._locators.cards.status_closed)
        self.status_active = Button(selector=self._locators.cards.status_active)
        self.status_expired = Button(selector=self._locators.cards.status_expired)
        self.status_frozen = Button(selector=self._locators.cards.status_frozen)
        self.modal_title_card = Button(selector=self._locators.cards.modal_title_card)
        self.modal_title_owner = Button(selector=self._locators.cards.modal_title_owner)
        self.popover_activator = Button(selector=self._locators.cards.popover_activator)
        self.popover_activator_icon = Button(selector=self._locators.cards.popover_activator_icon)
        self.modal_title_billing_address_ru = Button(selector=self._locators.cards.modal_title_billing_address_ru)
        self.modal_billing_address = Button(selector=self._locators.cards.modal_billing_address)
        self.toast = Button(selector=self._locators.cards.toast)
        self.modal_close_card = Button(selector=self._locators.cards.modal_close_card)
        self.close_modal_card = Button(selector=self._locators.cards.close_modal_card)
        self.first_active_status_at_table = Button(selector=self._locators.cards.first_active_status_at_table)
        self.right_arrow_first_card = Button(selector=self._locators.cards.right_arrow_first_card)
        self.right_arrow_card = Button(selector=self._locators.cards.right_arrow_card)
        self.left_arrow_card = Button(selector=self._locators.cards.left_arrow_card)
        self.copy_all = Button(selector=self._locators.cards.copy_all)
        self.modal_pencil_button = Button(selector=self._locators.cards.modal_pencil_button)
        self.modal_card_number = Button(selector=self._locators.cards.modal_card_number)
        self.modal_card_exp = Button(selector=self._locators.cards.modal_card_exp)
        self.modal_card_cvc = Button(selector=self._locators.cards.modal_card_cvc)




